package io.flutter.plugins;

import androidx.annotation.Keep;
import androidx.annotation.NonNull;
import io.flutter.Log;

import io.flutter.embedding.engine.FlutterEngine;

/**
 * Generated file. Do not edit.
 * This file is generated by the Flutter tool based on the
 * plugins that support the Android platform.
 */
@Keep
public final class GeneratedPluginRegistrant {
  private static final String TAG = "GeneratedPluginRegistrant";
  public static void registerWith(@NonNull FlutterEngine flutterEngine) {
    try {
      flutterEngine.getPlugins().add(new com.innovatrics.dot.flutter.core.DotCorePlugin());
    } catch (Exception e) {
      Log.e(TAG, "Error registering plugin dot_core_android, com.innovatrics.dot.flutter.core.DotCorePlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.innovatrics.dot.flutter.document.DotDocumentPlugin());
    } catch (Exception e) {
      Log.e(TAG, "Error registering plugin dot_document_android, com.innovatrics.dot.flutter.document.DotDocumentPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.innovatrics.dot.flutter.face.lite.DotFaceLitePlugin());
    } catch (Exception e) {
      Log.e(TAG, "Error registering plugin dot_face_lite_android, com.innovatrics.dot.flutter.face.lite.DotFaceLitePlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.innovatrics.dot.flutter.nfc.DotNfcPlugin());
    } catch (Exception e) {
      Log.e(TAG, "Error registering plugin dot_nfc_android, com.innovatrics.dot.flutter.nfc.DotNfcPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new io.flutter.plugins.pathprovider.PathProviderPlugin());
    } catch (Exception e) {
      Log.e(TAG, "Error registering plugin path_provider_android, io.flutter.plugins.pathprovider.PathProviderPlugin", e);
    }
  }
}
